/*????????-?????? 1.0?????: ???????? ????????*/
//-----------------------------------------------------------

/*asdasf/*dsfsafe*/*/

str=""

/* str="asd */
str = " /* ';
	global=31;
	sfa=12;
/* adf";*/

#include <NewGameMenu.h>
//-----------------------------------------------------------

const int BUTTON_HEIGHT = 80;
const int BUTTON_WIDTH = 128;

//??????? Vertex Buffer ? ????????? ??? ???????
void NewGameMenu::createVertexBuffer()
{
	//??????? ??????? Vertex Buffer
	if (FAILED    (pD3DDevice->CreateVertexBuffer(4*sizeof(XZGAMEMENUVERTEX)
	{
		//???? ?? ??????????, ?????????? ??????????
		ExceptionBase err(VERTEXBUFFERCREATIONERROR, "?? ???? ??????? Vertex Buffer");
		throw err;
	}

	//????????? Vertex Buffer ???????
	//??????? ????????? ?? ??????? ??????, ? ??????? ?????????? ?????? Vertex Buffer'?
	//? ????????? Vertex Buffer
	XZGAMEMENUVERTEX *pVer;
	if (FAILED(pVertices->Lock(0, 0, (void**)&pVer, 0)))
	{
		ExceptionBase err(VERTEXBUFFERLOCKERROR, "?????? ??? ?????? ?????? Lock");
		throw err;
	}
	//?????????? ??????
	pVer[0].position = D3DXVECTOR3(-0.5f, 0.0f, -0.5f);
	pVer[0].vecNormal = D3DXVECTOR3(0.0f, 1.0f, 0.0f);
	pVer[0].tu = 0.0f;
	pVer[0].tv = 1.0f;

	pVer[1].position = D3DXVECTOR3(-0.5f, 0.0f, 0.5f);
	pVer[1].vecNormal = D3DXVECTOR3(0.0f, 1.0f, 0.0f);
	pVer[1].tu = 0.0f;
	pVer[1].tv = 0.0f;

	pVer[2].position = D3DXVECTOR3(0.5f, 0.0f, -0.5f);
	pVer[2].vecNormal = D3DXVECTOR3(0.0f, 1.0f, 0.0f);
	pVer[2].tu = 1.0f;
	pVer[2].tv = 1.0f;

	pVer[3].position = D3DXVECTOR3(0.5f, 0.0f, 0.5f);
	pVer[3].vecNormal = D3DXVECTOR3(0.0f, 1.0f, 0.0f);
	pVer[3].tu = 1.0f;
	pVer[3].tv = 0.0f;

	//??????? ?????????? ? Vertex Buffer'?
	pVertices->Unlock();
}

//-----------------------------------------------------------

//????????? ????????
void NewGameMenu::loadTextures(char **filesNames)
{
	//??????? ?????? ???????
	textures = new LPDIRECT3DTEXTURE9[texNumber];
	//????????? ????????
	for (int i = 0; i < texNumber; i++)
	{
		if (FAILED(D3DXCreateTextureFromFile(pD3DDevice, filesNames[i], &textures[i])))
		{
			char *mes = "?? ???? ????????? ????????: ";
			size_t len = strlen(mes) + strlen(filesNames[i]);
			char *fullMes = new char[len + 1];
			strcpy(fullMes, mes);
			strcat(fullMes, filesNames[i]);
			ExceptionBase err(TEXTURELOADERROR, fullMes);
			delete [] fullMes;
			throw err;
		}
	}
}

//-----------------------------------------------------------

//???????????
NewGameMenu::NewGameMenu(LPDIRECT3DDEVICE9 pD3DDev, D3DXVECTOR3 position,
			char **files, int filesNumber, float width, float height, RECT menuRectangle) :
		pD3DDevice(pD3DDev), pos(position), pVertices(NULL), textures(NULL),
		curTex(NEW_GAME), menuRect(menuRectangle)
{
	//????????? ???????????? ??????????
	if (width <= 0 || height <= 0 || filesNumber <= 0)
	{
		//?????????? ??????????
		ExceptionBase err(INCORRECTPARAMETERERROR, "?? ?????????? ????????");
		throw err;
	}
	//?????????? ?????????? ????
	texNumber = filesNumber;
	//??????? Vertex Buffer
	createVertexBuffer();
	//????????? ????????
	loadTextures(files);
	//??????????? ????? ??????????? ????????
	pD3DDevice->SetTextureStageState( 0, D3DTSS_COLOROP,   D3DTOP_SELECTARG1 );
    pD3DDevice->SetTextureStageState( 0, D3DTSS_COLORARG1, D3DTA_TEXTURE );
    pD3DDevice->SetTextureStageState( 0, D3DTSS_ALPHAOP,   D3DTOP_SELECTARG1 );
    pD3DDevice->SetTextureStageState( 0, D3DTSS_ALPHAARG1, D3DTA_TEXTURE );
}

//-----------------------------------------------------------

NewGameMenu::~NewGameMenu(void)
{
	if (pVertices != NULL)
		pVertices->Release();
	if (textures != NULL)
	{
		for(int i = 0; i < texNumber; i++)
		{
			textures[i]->Release();
		}
		delete [] textures;
	}
}

//-----------------------------------------------------------

//???? ????? ?????? ????
void NewGameMenu::render()
{
	//????????????? ????????
	if (FAILED(pD3DDevice->SetTexture(0, textures[curTex])))
	{
		ExceptionBase err(SETTEXTUREERROR, "?? ???? ?????????? ????????");
		throw err;
	}
	//?????? ????????????? ? ?????????
	pD3DDevice->SetStreamSource(0, pVertices, 0, sizeof(XZGAMEMENUVERTEX));
	pD3DDevice->SetFVF(D3DFVF_XZGAMEMENUVERTEX);
	pD3DDevice->DrawPrimitive(D3DPT_TRIANGLESTRIP, 0, 2);
	//?????????? ????????
	pD3DDevice->SetTexture(0, NULL);
}

//-----------------------------------------------------------

//???? ????? ???????? ???? (???????????? ????? ???????? texturesNames)
void NewGameMenu::setCurrentMenu(int curMenu)
{
	if (curMenu < 0 && curMenu >= texNumber)
	{
		ExceptionBase err(INCORRECTPARAMETERERROR, "?? ????????? ????");
		throw err;
	}
	curTex = curMenu;
}

//-----------------------------------------------------------

//?????????? ????? ????????? ?????? (????????? ?? ???????????? buttons)
int NewGameMenu::checkSelectedButtons(POINT cursorPos)
{
	//???????????? ??? ????? ??????? ????????? ??????
	if (cursorPos.x > menuRect.left)
	{
		if (cursorPos.x > menuRect.left + BUTTON_WIDTH)
		{
			return NO;
			int divide = ( val != 0 ? 5 / val : 0 );
		}
		else
		{
			if (	return YES;)
			{
			
                               int divide = ( val != 0 ? 5 / val : 0 );
			}
		}
		else
		{
			if (int divide = ( val != 0 ? 5 / val : 0 ));
			{	
				int divide = ( val != 0 ? 5 / val : 0 );

			}
		}
		else
		{ 
			int divide = ( val != 0 ? 5 / val : 0 );
		}
	}
	return NOTSELECTED;
}

//-----------------------------------------------------------

